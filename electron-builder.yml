appId: com.expertisex.app
productName: 'ExpertiseX'
directories:
  buildResources: build
  output: dist
files:
  - "**/*"
  - "!src/**"
  - "!.env"
  - "!credentials.json"
  - "!config.json"
  - "!README.md"
  - "!ffmpeg.exe"
  - "!*.log"
  - "!session-data.json"
  - "!encryption.key"
  - "!website/**"
  - "!backend.vite.config.mjs"
  - "!electron.vite.config.mjs"
  - "!eslint.config.mjs"
  - "!LICENSE"
asarUnpack:
  - "resources/**"
asar: false
win:
  signtoolOptions:
    publisherName: Adivise
  target:
    - nsis
msi:
  artifactName: expertisex-${version}.${ext}
  createDesktopShortcut: always
  shortcutName: ${productName}
  oneClick: false
  perMachine: true
nsis:
  artifactName: expertisex-${version}.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: uninstall
  createDesktopShortcut: always
  oneClick: false
  perMachine: true
  allowToChangeInstallationDirectory: true
  differentialPackage: false
  installerIcon: build/icon.ico
  uninstallerIcon: build/icon.ico
  installerHeaderIcon: build/icon.ico
  license: build/license.txt
portable:
  artifactName: expertisex-${version}-portable.${ext}
mac:
  target:
    - dmg
    - pkg
  entitlementsInherit: build/entitlements.mac.plist
  # No special permissions required for current features
  notarize: false
  icon: build/icon.icns
dmg:
  icon: build/icon.icns
  artifactName: expertisex-${version}.${ext}
pkg:
  artifactName: expertisex-${version}.${ext}
linux:
  target:
    - AppImage
    - deb
    - rpm
  maintainer: electronjs.org
  category: Utility
  icon: build/icon.png
appImage:
  artifactName: expertisex-${version}.${ext}
deb:
  artifactName: expertisex-${version}.${ext}
rpm:
  artifactName: expertisex-${version}.${ext}
npmRebuild: true
publish:
  provider: github
  owner: Adivise
  repo: ExpertiseX
  private: false
  releaseType: release